---
  version: "3.1"
  services:
  
  # DCM4CHEE uses the an LDAP server for configuration, as per the DICOM 
  # Application Configuration Management Profile. For this installation
  # we do not apply any custom configuration to DCM4CEE
    ldap:
      container_name: ldap
      image: dcm4che/slapd-dcm4chee:2.4.48-22.2
      env_file: docker-compose.env
      networks:
        - pacs_network
  
  # DCM4CHEE uses this PostgreSQL database
    pacs-postgres:
      container_name: pacspostgres
      image: dcm4che/postgres-dcm4chee:12.2-22
      logging:
        driver: json-file
        options:
          max-size: "10m"
      environment:
        POSTGRES_DB: kheops_pacs
        POSTGRES_USER: kheops_pacs
        POSTGRES_PASSWORD_FILE: /run/secrets/kheops_pacsdb_pass
      env_file: docker-compose.env
      volumes:
        - dcm4chee-db-data:/var/lib/postgresql/data
      secrets:
        - kheops_pacsdb_pass
      networks:
        - pacs_network
  
  # The main DCM4CHEE container
    pacs-arc:
      container_name: pacsarc
      image: dcm4che/dcm4chee-arc-psql:5.22.2
      env_file: docker-compose.env
      environment:
        POSTGRES_DB: kheops_pacs
        POSTGRES_USER: kheops_pacs
        POSTGRES_PASSWORD_FILE: /run/secrets/kheops_pacsdb_pass
        STORAGE_DIR: /storage/fs1
        POSTGRES_HOST: pacspostgres
        WILDFLY_CHOWN: /storage /opt/wildfly/standalone
        WILDFLY_WAIT_FOR: ldap:389 pacspostgres:5432
        JAVA_OPTS: -Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true
      secrets:
        - kheops_pacsdb_pass
      depends_on:
        - ldap
        - pacs-postgres
      volumes:
        - dcm4chee-arc-wildfly:/opt/wildfly/standalone
        - dcm4chee-arc-storage:/storage
      networks:
        - pacs_network
  
  # KHEOPS persists all data to this PostgreSQL database
    kheops-postgres:
      container_name: kheopspostgres
      image: postgres:12.1-alpine
      volumes:
        - kheops-db-data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: kheops
        POSTGRES_USER: kheopsuser
        POSTGRES_PASSWORD_FILE: /run/secrets/kheops_authdb_pass
      ports:
        - "5432:5432"
      secrets:
        - kheops_authdb_pass
      networks:
        - kheops_network
  
    kheops-authorization:
      container_name: kheopsauthorization
      image: osirixfoundation/kheops-authorization:debug
      env_file: docker-compose.env
      environment:
        KHEOPS_OIDC_PROVIDER: https://keycloak.kheops.online/auth/realms/travis
        CATALINA_OPTS: -Duser.timezone=UTC
        JAVA_OPTS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8089"
      ports:
        - "8089:8089"
      depends_on:
        - kheops-postgres
      secrets:
        - kheops_auth_hmasecret
        - kheops_authdb_pass
        - kheops_client_dicomwebproxysecret
        - kheops_client_zippersecret
      networks:
        - kheops_network
  
    kheops-zipper:
      container_name: kheopszipper
      image: osirixfoundation/kheops-zipper:v0.9.5
      env_file: docker-compose.env
      secrets:
        - kheops_client_zippersecret
      networks:
        - kheops_network
  
    kheops-ui:
      container_name: kheopsui
      image: osirixfoundation/kheops-ui:webhook_new_event
      env_file: docker-compose.env
      networks:
        - frontend_network
  
    kheops-dicomweb-proxy:
      container_name: kheopsdicomwebproxy
      image: osirixfoundation/kheops-dicomweb-proxy:v0.9.5
      env_file: docker-compose.env
      secrets:
        - kheops_auth_hmasecret_post
        - kheops_client_dicomwebproxysecret
      networks:
        - kheops_network
  
    kheops-reverse-proxy:
      #image: osirixfoundation/kheops-reverse-proxy:v0.9.5-insecure
      #image: osirixfoundation/kheops-reverse-proxy:test
      #image: osirixfoundation/kheops-reverse-proxy:ci-test-one_branche
      image: osirixfoundation/kheops-reverse-proxy:ci-test
      container_name: kheopsreverseproxy
      env_file: docker-compose.env
      ports:
        - "8042:8042"
      depends_on:
        - kheops-authorization
        - kheops-dicomweb-proxy
        - kheops-ui
        - kheops-zipper
      networks:
        - kheops_network
        - frontend_network
  
    pacs-authorization-proxy:
      container_name: pacsauthorizationproxy
      env_file: docker-compose.env
      image: osirixfoundation/pacs-authorization-proxy:v0.9.5
      depends_on:
        - pacs-arc
      secrets:
        - kheops_auth_hmasecret
        - kheops_auth_hmasecret_post
      networks:
        - pacs_network
        - kheops_network
  
  secrets:
    kheops_authdb_pass:
      file: secrets/kheops_authdb_pass
    kheops_pacsdb_pass:
      file: secrets/kheops_pacsdb_pass
    kheops_auth_hmasecret:
      file: secrets/kheops_auth_hmasecret
    kheops_auth_hmasecret_post:
      file: secrets/kheops_auth_hmasecret_post
    kheops_client_dicomwebproxysecret:
      file: secrets/kheops_client_dicomwebproxysecret
    kheops_client_zippersecret:
      file: secrets/kheops_client_zippersecret
  
  volumes:
    dcm4chee-db-data:
    dcm4chee-arc-wildfly:
    dcm4chee-arc-storage:
    kheops-db-data:
  
  networks:
  # Network used for communication between the backend KHEOPS components
    kheops_network:
      driver: bridge
  # The PACS network isolates the PACS from the reset of KHEOPS ensuring that
  # all communication between KHEOPS and the PACS goes the the authorization
  # proxy.
    pacs_network:
      driver: bridge
  # network reserved for communication with the frontend UI.
    frontend_network:
      driver: bridge
  